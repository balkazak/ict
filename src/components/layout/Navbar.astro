---
import logo from "@/assets/logo.png";
import { NavItems } from "@/lib/NavItems";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";

const { pathname } = Astro.url;

const isActive = (itemPath: string) => {
  return pathname === itemPath || pathname.startsWith(itemPath + "/");
};
---

<div id="main-navbar" class="sticky top-0 z-50 bg-[#FFFFFF] shadow-sm">
  <div class="eco-noise absolute inset-0 opacity-5"></div>
  <div class="eco-scanline"></div>
  
  <div class="container relative z-10 mx-auto flex max-w-6xl items-center justify-between gap-4  py-3">
    <!-- Logo section - centered -->
    <div class="flex items-center justify-center">
      <a href="/" class="eco-brand group flex items-center gap-3">
        <div class="eco-logo-frame relative">
          <Image src={logo} alt="Logo" class="size-10" />
          <div class="eco-logo-glow"></div>
        </div>
        <span class="text-xl font-bold text-[#0A7B76] transition-all group-hover:text-[#0A5B56] whitespace-nowrap">
          ICT Central Asia
        </span>
      </a>
    </div>

    <!-- Desktop menu - centered -->
    <div class="hidden flex-1 xl:block">
      <ul class="eco-menu flex items-center justify-center gap-4">
        {
          NavItems.map((item) =>
            item.subItems ? (
              <li class="flex items-center">
                <details class={`eco-dropdown ${isActive(item.href) ? "open" : ""}`}>
                  <summary class={`eco-link whitespace-nowrap ${isActive(item.href) ? "active" : ""}`}>
                    {item.title}
                  </summary>
                  <ul class="eco-dropdown-content">
                    {item.subItems.map((subItem) =>
                      subItem.innerItems ? (
                        <li class="eco-dropdown-section">
                          <details class={`eco-dropdown-inner ${isActive(subItem.href) ? "open" : ""}`}>
                            <summary class={`eco-section-header ${isActive(subItem.href) ? "active" : ""}`}>
                              {subItem.title}
                              <Icon name="mdi:chevron-right" class="h-4 w-4 inline-block ml-auto transition-transform group-open:rotate-90" />
                            </summary>
                            <ul class="eco-dropdown-content-inner">
                              {subItem.innerItems.map((innerItem) => (
                                <li>
                                  <a
                                    href={innerItem.href}
                                    class={`eco-inner-link hover:bg-[#0A7B76]/10 hover:text-[#0A7B76] active:!bg-[#0A7B76]/20 transition-colors ${
                                      isActive(innerItem.href)
                                        ? "bg-[#0A7B76]/10 text-[#0A7B76] font-medium"
                                        : ""
                                    }`}
                                  >
                                    {innerItem.title}
                                  </a>
                                </li>
                              ))}
                            </ul>
                          </details>
                        </li>
                      ) : (
                        <li>
                          <a
                            href={subItem.href}
                            class={`hover:bg-[#0A7B76]/10 hover:text-[#0A7B76] active:!bg-[#0A7B76]/20 transition-colors ${
                              isActive(subItem.href)
                                ? "bg-[#0A7B76]/10 text-[#0A7B76] font-medium"
                                : ""
                            }`}
                          >
                            {subItem.title}
                          </a>
                        </li>
                      )
                    )}
                  </ul>
                </details>
              </li>
            ) : (
              <li>
                <a
                  href={item.href}
                  class={`hover:bg-[#0A7B76]/10 hover:text-[#0A7B76] active:!bg-[#0A7B76]/20 rounded-lg px-4 py-2 transition-colors ${
                    isActive(item.href)
                      ? "bg-[#0A7B76]/10 text-[#0A7B76] font-medium px-4 py-2"
                      : ""
                  }`}
                >
                  {item.title}
                </a>
              </li>
            )
          )
        }
      </ul>
    </div>

    <!-- Mobile menu button -->
    <div class="xl:hidden">
      <button
        id="mobile-menu-button"
        class="eco-button flex items-center gap-2 rounded-lg px-3 py-2"
      >
        <span class="text-[#0A7B76]">Меню</span>
        <Icon name="mdi:menu" class="h-6 w-6 text-[#0A7B76]" />
      </button>
    </div>
  </div>

  <!-- Mobile menu -->
  <div id="mobile-menu" class="hidden">
    <div class="container mx-auto px-4 py-4">
      <ul class="space-y-4">
        {
          NavItems.map((item) => (
            <li>
              {item.subItems ? (
                <details class={isActive(item.href) ? "open" : ""}>
                  <summary class="eco-mobile-link flex items-center justify-between">
                    {item.title}
                    <Icon name="mdi:chevron-down" class="h-5 w-5" />
                  </summary>
                  <ul class="ml-4 mt-2 space-y-2">
                    {item.subItems.map((subItem) => (
                      <li>
                        {subItem.innerItems ? (
                          <details class={`eco-mobile-section ${isActive(subItem.href) ? "open" : ""}`}>
                            <summary class="eco-mobile-section-header">
                              {subItem.title}
                              <Icon name="mdi:chevron-right" class="h-4 w-4" />
                            </summary>
                            <ul class="ml-4 mt-2 space-y-2">
                              {subItem.innerItems.map((innerItem) => (
                                <li>
                                  <a
                                    href={innerItem.href}
                                    class={`block py-2 ${
                                      isActive(innerItem.href)
                                        ? "text-[#0A7B76] font-medium"
                                        : "text-[#0A7B76]/80"
                                    }`}
                                  >
                                    {innerItem.title}
                                  </a>
                                </li>
                              ))}
                            </ul>
                          </details>
                        ) : (
                          <a
                            href={subItem.href}
                            class={`block py-2 ${
                              isActive(subItem.href)
                                ? "text-[#0A7B76] font-medium"
                                : "text-[#0A7B76]/80"
                            }`}
                          >
                            {subItem.title}
                          </a>
                        )}
                      </li>
                    ))}
                  </ul>
                </details>
              ) : (
                <a
                  href={item.href}
                  class={`block py-2 ${
                    isActive(item.href)
                      ? "text-[#0A7B76] font-medium"
                      : "text-[#0A7B76]/80"
                  }`}
                >
                  {item.title}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>

<style>
  .eco-noise {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.05;
  }

  .eco-scanline {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(10, 123, 118, 0.5), transparent);
    opacity: 0;
    animation: scanline 4s linear infinite;
  }

  .eco-brand:hover .eco-scanline {
    opacity: 1;
  }

  .eco-logo-frame {
    position: relative;
    border-radius: 50%;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .eco-logo-glow {
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at center, rgba(10, 123, 118, 0.3), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .eco-brand:hover .eco-logo-glow {
    opacity: 1;
  }

  .eco-menu {
    display: flex;
    gap: 1rem;
  }

  .eco-link {
    position: relative;
    padding: 0.5rem 1rem;
    color: rgba(10, 123, 118, 0.8);
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .eco-link:hover, .eco-link.active {
    color: rgba(10, 123, 118, 1);
  }

  .eco-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background: rgba(10, 123, 118, 0.5);
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }

  .eco-link:hover::after, .eco-link.active::after {
    width: 80%;
  }

  .eco-dropdown {
    position: relative;
  }

  .eco-dropdown-content {
    position: absolute;
    top: 100%;
    left: 0;
    min-width: 200px;
    background: white;
    border: 1px solid rgba(10, 123, 118, 0.1);
    border-radius: 4px;
    box-shadow: 0 10px 25px rgba(10, 123, 118, 0.1);
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
    transition: all 0.3s ease;
    z-index: 100;
    overflow: hidden;
  }

  .eco-dropdown[open] .eco-dropdown-content {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .eco-dropdown-content a {
    display: block;
    padding: 0.75rem 1rem;
    color: rgba(10, 123, 118, 0.8);
    transition: all 0.3s ease;
  }

  .eco-dropdown-content a:hover {
    background: rgba(10, 123, 118, 0.05);
  }

  .eco-button {
    background: rgba(10, 123, 118, 0.1);
    border: 1px solid rgba(10, 123, 118, 0.2);
    transition: all 0.3s ease;
  }

  .eco-button:hover {
    background: rgba(10, 123, 118, 0.15);
  }

  .eco-mobile-link {
    display: block;
    padding: 0.5rem 0;
    color: rgba(10, 123, 118, 0.8);
    font-weight: 500;
    cursor: pointer;
  }

  @keyframes scanline {
    0%, 100% { left: 0; opacity: 0; }
    10%, 90% { opacity: 0; }
    50% { left: 100%; opacity: 0.5; }
  }

  .eco-dropdown-section {
    border-left: 2px solid rgba(10, 123, 118, 0.2);
    margin: 0.5rem 0;
  }

  .eco-section-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.75rem 1rem;
    color: rgba(10, 123, 118, 0.9);
    font-weight: 500;
    background: rgba(10, 123, 118, 0.05);
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .eco-section-header:hover, .eco-section-header.active {
    background: rgba(10, 123, 118, 0.1);
    color: rgba(10, 123, 118, 1);
  }

  .eco-dropdown-content-inner {
    padding-left: 0.5rem;
    border-left: 1px dashed rgba(10, 123, 118, 0.2);
    margin-left: 1rem;
  }

  .eco-inner-link {
    display: block;
    padding: 0.6rem 1rem;
    font-size: 0.95rem;
  }

  /* Mobile version */
  .eco-mobile-section {
    border-left: 2px solid rgba(10, 123, 118, 0.2);
    margin: 0.5rem 0;
    padding-left: 0.5rem;
  }

  .eco-mobile-section-header {
    font-weight: 500;
    color: rgba(10, 123, 118, 0.9);
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }

    // Handle dropdowns
    const dropdowns = document.querySelectorAll('.eco-dropdown');
    dropdowns.forEach(dropdown => {
      const summary = dropdown.querySelector('summary');
      if (summary) {
        summary.addEventListener('click', (e) => {
          e.preventDefault();
          dropdown.toggleAttribute('open');
        });
      }
    });
  });
</script>
