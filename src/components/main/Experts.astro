---
import "swiper/css";
import "swiper/css/autoplay";
import "swiper/css/effect-cards";
import { Image } from "astro:assets";
import PeterCull from "@/assets/experts/Peter-Cull.webp";
import RicardoCarassco from "@/assets/experts/Ricardo-Carassco.jpg";
import TalgatKerteshev from "@/assets/experts/Talgat-Kerteshev.webp";

const experts = [
  {
    name: "Доктор Питер Кол (Peter Cull)",
    position: "Основатель и генеральный директор ICT International",
    bio: "Австралийский ученый и предприниматель, известный своими инновациями в области экологического мониторинга и управления водными ресурсами. Он является основателем и генеральным директором компании ICT International, специализирующейся на разработке и производстве высокоточных приборов для измерения параметров почвы, растений и окружающей среды.",
    image: PeterCull,
  },
  {
    name: "Рикардо Карраско",
    position: "Эксперт по устойчивому развитию",
    bio: "Признанный эксперт в сфере устойчивого развития, климатической политики и углеродных проектов. Обладая многолетним опытом работы в этой области, он внес значительный вклад в разработку и реализацию стратегий по снижению выбросов парниковых газов, адаптации к изменениям климата и развитию углеродных рынков.",
    image: RicardoCarassco,
  },
  {
    name: "Талгат Сеитович Кертешев",
    position: "Декан факультета «Водные, земельные и лесные ресурсы» КазНАИУ",
    bio: "Кандидат сельскохозяйственных наук, известный своей деятельностью в области сохранения биоразнообразия и управления экосистемами. Внес значительный вклад в создание нескольких особо охраняемых природных территорий Казахстана. Активно участвует в развитии углеродных проектов в Казахстане.",
    image: TalgatKerteshev,
  },
];
---

<section class="relative min-h-screen overflow-hidden bg-[#0A0A1B] py-24">
  <!-- Neural network background animation -->
  <div class="neural-network absolute inset-0 opacity-20"></div>

  <!-- Floating tech elements -->
  <div class="absolute inset-0 overflow-hidden">
    {Array.from({ length: 20 }).map((_, i) => (
      <div
        class="tech-element"
        style={{
          '--delay': `${Math.random() * 5}s`,
          '--duration': `${Math.random() * 10 + 20}s`,
          '--size': `${Math.random() * 30 + 20}px`,
          left: `${Math.random() * 100}%`,
          top: `${Math.random() * 100}%`
        }}
      ></div>
    ))}
  </div>

  <div class="relative z-10 container mx-auto px-4">
    <!-- Section Header -->
    <div class="text-center mb-20">
      <div class="cyber-badge mx-auto" data-aos="zoom-in">
        <div class="cyber-badge__glitch"></div>
        <span class="relative z-10 text-[#00FFFF] font-bold tracking-widest">ЭКСПЕРТЫ</span>
      </div>
      <h2 class="mt-6 text-5xl font-bold text-white cyber-glitch" data-text="Наши специалисты">
        Наши специалисты
      </h2>
    </div>

    <!-- Experts Cards Container -->
    <div class="experts-container">
      {experts.map((expert, index) => (
        <div 
          class="expert-card"
          data-aos="fade-up"
          data-aos-delay={index * 200}
        >
          <div class="expert-card__hologram"></div>
          <div class="expert-card__content">
            <div class="expert-card__image-container">
              <div class="expert-card__scan-line"></div>
              <Image
                src={expert.image}
                alt={expert.name}
                class="expert-card__image"
                width={400}
                height={400}
              />
              <div class="expert-card__image-glitch"></div>
            </div>
            <div class="expert-card__info">
              <h3 class="expert-card__name">{expert.name}</h3>
              <p class="expert-card__position">{expert.position}</p>
              <p class="expert-card__bio">{expert.bio}</p>
            </div>
          </div>
          <div class="expert-card__decorations">
            <div class="expert-card__circuit"></div>
            <div class="expert-card__glow"></div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .neural-network {
    background: 
      linear-gradient(90deg, #00FFFF 1px, transparent 1px) 0 0 / 50px 50px,
      linear-gradient(#00FFFF 1px, transparent 1px) 0 0 / 50px 50px;
    transform: perspective(500px) rotateX(60deg);
    transform-origin: top;
    animation: gridMove 20s linear infinite;
  }

  .tech-element {
    position: absolute;
    width: var(--size);
    height: var(--size);
    background: linear-gradient(45deg, #00FFFF20, transparent);
    border: 1px solid #00FFFF10;
    animation: float var(--duration) ease-in-out infinite;
    animation-delay: var(--delay);
    opacity: 0.3;
  }

  .experts-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    perspective: 1000px;
  }

  .expert-card {
    position: relative;
    background: rgba(0, 255, 255, 0.05);
    border-radius: 15px;
    overflow: hidden;
    transition: all 0.5s ease;
    transform-style: preserve-3d;
  }

  .expert-card:hover {
    transform: translateY(-10px) rotateY(10deg);
    box-shadow: 
      0 0 30px rgba(0, 255, 255, 0.2),
      0 0 60px rgba(0, 255, 255, 0.1);
  }

  .expert-card__hologram {
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      transparent 0%,
      rgba(0, 255, 255, 0.1) 50%,
      transparent 100%
    );
    animation: hologramShift 3s ease-in-out infinite;
  }

  .expert-card__image-container {
    position: relative;
    height: 300px;
    overflow: hidden;
  }

  .expert-card__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: brightness(0.8) contrast(1.2);
  }

  .expert-card__scan-line {
    position: absolute;
    width: 100%;
    height: 2px;
    background: linear-gradient(
      90deg,
      transparent,
      #00FFFF,
      transparent
    );
    animation: scanLine 2s linear infinite;
    z-index: 2;
  }

  .expert-card__info {
    padding: 1.5rem;
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(10px);
  }

  .expert-card__name {
    font-size: 1.5rem;
    color: #00FFFF;
    margin-bottom: 0.5rem;
    text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  }

  .expert-card__position {
    color: rgba(0, 255, 255, 0.8);
    font-size: 0.9rem;
    margin-bottom: 1rem;
  }

  .expert-card__bio {
    color: rgba(0, 255, 255, 0.6);
    font-size: 0.9rem;
    line-height: 1.6;
  }

  .expert-card__circuit {
    position: absolute;
    inset: 0;
    background-image: 
      radial-gradient(
        circle at 30% 107%,
        rgba(0, 255, 255, 0.1) 0%,
        rgba(0, 255, 255, 0.07) 5%,
        rgba(0, 255, 255, 0.05) 45%,
        rgba(0, 255, 255, 0.03) 60%,
        transparent 70%
      );
    pointer-events: none;
  }

  @keyframes gridMove {
    from { background-position: 0 0; }
    to { background-position: 50px 50px; }
  }

  @keyframes float {
    0%, 100% { transform: translate(0, 0) rotate(0deg); }
    50% { transform: translate(-20px, -20px) rotate(180deg); }
  }

  @keyframes scanLine {
    0% { top: 0; opacity: 0; }
    50% { opacity: 1; }
    100% { top: 100%; opacity: 0; }
  }

  @keyframes hologramShift {
    0%, 100% { opacity: 0.5; transform: translateX(-100%); }
    50% { opacity: 1; transform: translateX(100%); }
  }

  .cyber-badge {
    position: relative;
    display: inline-block;
    padding: 0.5rem 2rem;
    background: rgba(0, 255, 255, 0.1);
    border: 1px solid rgba(0, 255, 255, 0.2);
    overflow: hidden;
  }

  .cyber-glitch {
    position: relative;
    text-shadow: 
      0 0 10px rgba(0, 255, 255, 0.5),
      0 0 20px rgba(0, 255, 255, 0.3),
      0 0 30px rgba(0, 255, 255, 0.2);
    animation: textGlitch 4s infinite;
  }

  @keyframes textGlitch {
    0%, 100% { transform: none; opacity: 1; }
    92% { transform: skew(1deg); }
    94% { transform: skew(-1deg); opacity: 0.8; }
    96% { transform: skew(2deg); opacity: 0.9; }
    98% { transform: skew(-2deg); opacity: 1; }
  }
</style>

<script>
  import Swiper from "swiper";
  import { Pagination, Autoplay } from "swiper/modules";

  const swiper = new Swiper(".experts-swiper", {
    modules: [Pagination, Autoplay],
    slidesPerView: 1,
    spaceBetween: 30,
    loop: true,
    grabCursor: true,
    autoplay: {
      delay: 5000,
      disableOnInteraction: false,
      pauseOnMouseEnter: true,
    },
    pagination: {
      el: ".swiper-pagination",
      clickable: true,
      dynamicBullets: true,
      renderBullet: function (index, className) {
        return `<span class="${className} inline-block w-3 h-3 mx-1"></span>`;
      },
    },
  });
</script>
