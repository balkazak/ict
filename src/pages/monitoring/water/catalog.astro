---
import Layout from "@/layouts/Layout.astro";
---

<Layout title="Каталог оборудования для мониторинга воды | ICT Central Asia">
  <section class="bg-base-200 py-16">
    <div class="container mx-auto max-w-7xl px-4 py-8">
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-4">Каталог оборудования для мониторинга воды</h1>
        <p class="text-gray-600 mb-6">Полный каталог оборудования для контроля качества, уровня, давления и температуры воды</p>
        
        <div class="flex flex-wrap gap-4 mb-6">
          <button id="filter-all" class="filter-btn px-4 py-2 rounded-lg font-medium transition-colors duration-200 bg-blue-600 text-white">
            Все категории
          </button>
          <button id="filter-redox" class="filter-btn px-4 py-2 rounded-lg font-medium transition-colors duration-200 bg-gray-200 text-gray-700 hover:bg-gray-300">
            ОВП/температура
          </button>
          <button id="filter-turbidity" class="filter-btn px-4 py-2 rounded-lg font-medium transition-colors duration-200 bg-gray-200 text-gray-700 hover:bg-gray-300">
            Мутность (нефелометрия)
          </button>
          <button id="filter-conductivity" class="filter-btn px-4 py-2 rounded-lg font-medium transition-colors duration-200 bg-gray-200 text-gray-700 hover:bg-gray-300">
            Электропроводность/Солёность
          </button>
          <button id="filter-oxygen" class="filter-btn px-4 py-2 rounded-lg font-medium transition-colors duration-200 bg-gray-200 text-gray-700 hover:bg-gray-300">
            Растворённый кислород
          </button>
          <button id="filter-level" class="filter-btn px-4 py-2 rounded-lg font-medium transition-colors duration-200 bg-gray-200 text-gray-700 hover:bg-gray-300">
            Измерение уровня и глубины
          </button>
          <button id="filter-pressure" class="filter-btn px-4 py-2 rounded-lg font-medium transition-colors duration-200 bg-gray-200 text-gray-700 hover:bg-gray-300">
            Давление и температура
          </button>
        </div>
        
        <div class="relative">
          <input 
            id="search-input"
            type="text" 
            placeholder="Поиск по названию или описанию..."
            class="w-full px-4 py-2 pl-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          >
          <svg class="absolute left-3 top-2.5 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
        </div>
      </div>
      
      <div id="equipment-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      </div>
      
      <div id="no-results" class="hidden text-center py-12">
        <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33"></path>
        </svg>
        <h3 class="text-lg font-medium text-gray-900 mb-2">Ничего не найдено</h3>
        <p class="text-gray-500">Попробуйте изменить критерии поиска</p>
      </div>
    </div>
    
    <div id="equipment-modal" class="fixed inset-0 z-50 hidden items-center justify-center p-4 bg-black bg-opacity-50">
      <div class="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        <div class="sticky top-0 bg-white border-b p-6 flex justify-between items-center">
          <h2 id="modal-title" class="text-2xl font-bold text-gray-900"></h2>
          <button id="close-modal" class="text-gray-500 hover:text-gray-700">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <div id="modal-content" class="p-6"></div>
      </div>
    </div>
  </section>
</Layout>

<script>
  const allWaterEquipment = [
    {
      id: 'awq-ph',
      name: 'AWQ-pH',
      category: 'redox',
      subcategory: 'pH/ОВП/Температура',
      image: 'https://via.placeholder.com/400x300/3B82F6/FFFFFF?text=AWQ-pH',
      shortDescription: 'Датчик pH/ОВП/температура для работы в сложных условиях',
      features: [
        'Встроенное хранение данных (калибровка и история измерений)',
        'Долговечная технология Plastogel® - увеличенный срок службы',
        'Цифровой интерфейс (Modbus RS485 и SDI-12)',
        'Комбинированный датчик pH + ОВП + температура',
        'Простое обслуживание благодаря сменным картриджам'
      ],
      specifications: {
        'pH': '0-14',
        'ОВП (Redox)': '-1000...+1000 мВ',
        'Температура': '-10...+50 °C'
      },
      applications: [
        'Чистая горная вода (проводимость от 20 мкСм/см)',
        'Озера и реки (100-2000 мкСм/см)',
        'Морская вода (проводимость до 50 мСм/см)',
        'Сточные воды (проводимость свыше 200 мСм/см)'
      ]
    },
    {
      id: 'awq-turb',
      name: 'AWQ-TURB',
      category: 'turbidity',
      subcategory: 'Мутность',
      image: 'https://via.placeholder.com/400x300/8B5CF6/FFFFFF?text=AWQ-TURB',
      shortDescription: 'Датчик мутности для контроля качества воды',
      features: [
        'Оптический принцип измерения по стандарту ISO 7027',
        'Автоматическая очистка оптических поверхностей',
        'Компенсация цветности воды',
        'Широкий динамический диапазон измерений',
        'Устойчивость к биообрастанию'
      ],
      specifications: {
        'Диапазон': '0-4000 NTU',
        'Точность': '±2% от измеренного значения',
        'Разрешение': '0.01 NTU',
        'Температура': '0...+50 °C'
      },
      applications: [
        'Контроль качества питьевой воды',
        'Мониторинг процессов фильтрации',
        'Экологический мониторинг водоемов',
        'Контроль промышленных стоков'
      ]
    },
    {
      id: 'awq-cond',
      name: 'AWQ-COND',
      category: 'conductivity',
      subcategory: 'Электропроводность/Солесодержание',
      image: 'https://via.placeholder.com/400x300/F59E0B/FFFFFF?text=AWQ-COND',
      shortDescription: 'Датчик электропроводности и солесодержания',
      features: [
        'Четырехэлектродная схема измерения',
        'Автоматическая температурная компенсация',
        'Расчет солесодержания и TDS',
        'Самодиагностика состояния электродов',
        'Устойчивость к загрязнениям'
      ],
      specifications: {
        'Проводимость': '0-200 мСм/см',
        'Соленость': '0-70 ppt',
        'TDS': '0-100 г/л',
        'Температура': '0...+50 °C'
      },
      applications: [
        'Мониторинг солености морской воды',
        'Контроль качества питьевой воды',
        'Промышленные процессы',
        'Сельскохозяйственное орошение'
      ]
    },
    {
      id: 'awq-do',
      name: 'AWQ-DO',
      category: 'oxygen',
      subcategory: 'Растворенный кислород',
      image: 'https://via.placeholder.com/400x300/10B981/FFFFFF?text=AWQ-DO',
      shortDescription: 'Оптический датчик растворенного кислорода',
      features: [
        'Оптическая технология измерения - без расходных материалов',
        'Автоматическая компенсация по температуре и давлению',
        'Встроенная система самодиагностики',
        'Цифровой интерфейс Modbus RS485 и SDI-12',
        'Долгосрочная стабильность измерений'
      ],
      specifications: {
        'Диапазон O2': '0-50 мг/л',
        'Точность': '±0.1 мг/л',
        'Температура': '0...+50 °C',
        'Давление': '0.5...5 атм'
      },
      applications: [
        'Мониторинг качества воды в реках и озерах',
        'Контроль процессов очистки сточных вод',
        'Аквакультура и рыбоводство',
        'Питьевое водоснабжение'
      ]
    },
    {
      id: 'stevens-sdx',
      name: 'Stevens SDX',
      category: 'level',
      subcategory: 'Погружной датчик уровня',
      image: 'https://via.placeholder.com/400x300/06B6D4/FFFFFF?text=Stevens+SDX',
      shortDescription: 'Погружной датчик давления для высокоточных измерений уровня жидкости',
      features: [
        'Корпус из ударопрочного и коррозионностойкого ПВХ Type II',
        'Вентилируемый кабель (длина на заказ)',
        'Аналоговый выход 4-20 мА с линейной зависимостью',
        'Герметизированная электроника'
      ],
      specifications: {
        'Точность': '±0.25% от полного диапазона',
        'Выходной сигнал': '4-20 мА',
        'Материал корпуса': 'ПВХ Type II',
        'Тип кабеля': 'Вентилируемый'
      },
      applications: [
        'Мониторинг уровней в реках, озерах и резервуарах',
        'Контроль сточных вод и промышленных жидкостей'
      ]
    },
    {
      id: 'ecl-8430',
      name: 'ECL 8430',
      category: 'pressure',
      subcategory: 'Датчик давления и температуры',
      image: 'https://via.placeholder.com/400x300/F59E0B/FFFFFF?text=ECL+8430',
      shortDescription: 'Высокоточный датчик давления и температуры для водных применений',
      features: [
        'Одновременное измерение давления и температуры',
        'Высокая точность и стабильность',
        'Компактный дизайн',
        'Простая установка и обслуживание',
        'Широкий диапазон рабочих температур'
      ],
      specifications: {
        'Диапазон давления': '0-10 Бар',
        'Точность давления': '±0.1% от полной шкалы',
        'Диапазон температуры': '-40...+85 °C',
        'Точность температуры': '±0.5 °C',
        'Выходной сигнал': '4-20 мА',
        'Материал корпуса': 'Нержавеющая сталь'
      },
      applications: [
        'Мониторинг давления в трубопроводах',
        'Контроль температуры в системах водоснабжения',
        'Промышленные процессы',
        'Системы отопления и охлаждения'
      ]
    }
  ];

  function getCategoryName(category) {
    const names = {
      redox: 'pH/ОВП/Температура',
      turbidity: 'Мутность',
      conductivity: 'Электропроводность/Солесодержание',
      oxygen: 'Растворенный кислород',
      level: 'Уровень',
      pressure: 'Давление/Температура'
    };
    return names[category] || category;
  }

  function getCategoryColor(category) {
    const colors = {
      redox: 'bg-blue-600',
      turbidity: 'bg-cyan-600',
      conductivity: 'bg-orange-600',
      oxygen: 'bg-pink-600',
      level: 'bg-cyan-600',
      pressure: 'bg-orange-600'
    };
    return colors[category] || 'bg-gray-600';
  }

  function createEquipmentCard(equipment) {
    return `
      <div class="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 cursor-pointer equipment-card" data-id="${equipment.id}">
        <div class="relative">
          <img src="${equipment.image}" alt="${equipment.name}" class="w-full h-48 object-cover rounded-t-lg bg-gray-200">
          <div class="absolute top-2 right-2">
            <span class="${getCategoryColor(equipment.category)} text-white px-2 py-1 rounded-full text-xs font-medium">
              ${getCategoryName(equipment.category)}
            </span>
          </div>
        </div>
        <div class="p-6">
          <h3 class="text-xl font-semibold text-gray-900 mb-2">${equipment.name}</h3>
          <p class="text-sm text-gray-600 mb-3">${equipment.subcategory}</p>
          <p class="text-gray-700 mb-4 line-clamp-3">${equipment.shortDescription}</p>
          
          <div class="flex flex-wrap gap-2 mb-4">
            ${equipment.features.slice(0, 2).map(feature => 
              `<span class="bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs">
                ${feature.length > 30 ? feature.substring(0, 30) + '...' : feature}
              </span>`
            ).join('')}
          </div>
          
          <button class="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors duration-200">
            Подробнее
          </button>
        </div>
      </div>
    `;
  }

  let currentFilter = 'all';
  let currentSearch = '';

  function renderEquipment() {
    const equipmentGrid = document.getElementById('equipment-grid');
    const noResults = document.getElementById('no-results');
    
    let filtered = allWaterEquipment;
    
    if (currentFilter !== 'all') {
      filtered = filtered.filter(eq => eq.category === currentFilter);
    }
    
    if (currentSearch) {
      filtered = filtered.filter(eq => 
        eq.name.toLowerCase().includes(currentSearch.toLowerCase()) ||
        eq.shortDescription.toLowerCase().includes(currentSearch.toLowerCase()) ||
        eq.subcategory.toLowerCase().includes(currentSearch.toLowerCase())
      );
    }
    
    if (filtered.length === 0) {
      equipmentGrid.innerHTML = '';
      noResults.classList.remove('hidden');
    } else {
      equipmentGrid.innerHTML = filtered.map(createEquipmentCard).join('');
      noResults.classList.add('hidden');
    }
  }

  function createModalContent(equipment) {
    return `
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <div>
          <img src="${equipment.image}" alt="${equipment.name}" class="w-full h-64 object-cover rounded-lg mb-6">
          
          <h3 class="text-xl font-semibold mb-4">Основные характеристики</h3>
          <ul class="space-y-2 mb-6">
            ${equipment.features.map(feature => 
              `<li class="flex items-start">
                <svg class="w-5 h-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                </svg>
                <span class="text-gray-700">${feature}</span>
              </li>`
            ).join('')}
          </ul>
          
          <h3 class="text-xl font-semibold mb-4">Технические характеристики</h3>
          <div class="bg-gray-50 rounded-lg p-4">
            ${Object.entries(equipment.specifications).map(([key, value]) => 
              `<div class="flex justify-between py-2 border-b border-gray-200 last:border-b-0">
                <span class="font-medium text-gray-700">${key}:</span>
                <span class="text-gray-900">${value}</span>
              </div>`
            ).join('')}
          </div>
        </div>
        
        <div>
          <h3 class="text-xl font-semibold mb-4">Области применения</h3>
          <ul class="space-y-2">
            ${equipment.applications.map(application => 
              `<li class="flex items-start">
                <svg class="w-5 h-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                </svg>
                <span class="text-gray-700">${application}</span>
              </li>`
            ).join('')}
          </ul>
          
          <div class="mt-8 p-6 bg-blue-50 rounded-lg">
            <h4 class="text-lg font-semibold text-blue-900 mb-2">Нужна консультация?</h4>
            <p class="text-blue-700 mb-4">Наши специалисты помогут подобрать оптимальное решение для ваших задач</p>
            <button class="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors">
              Связаться с нами
            </button>
          </div>
        </div>
      </div>
    `;
  }

  document.addEventListener('DOMContentLoaded', () => {
    const equipmentGrid = document.getElementById('equipment-grid');
    const modal = document.getElementById('equipment-modal');
    const modalTitle = document.getElementById('modal-title');
    const modalContent = document.getElementById('modal-content');
    const closeModal = document.getElementById('close-modal');
    const searchInput = document.getElementById('search-input');

    renderEquipment();

    document.querySelectorAll('.filter-btn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        document.querySelectorAll('.filter-btn').forEach(b => {
          b.classList.remove('bg-blue-600', 'text-white');
          b.classList.add('bg-gray-200', 'text-gray-700');
        });
        
        e.target.classList.remove('bg-gray-200', 'text-gray-700');
        e.target.classList.add('bg-blue-600', 'text-white');
        
        currentFilter = e.target.id.replace('filter-', '');
        renderEquipment();
      });
    });

    searchInput.addEventListener('input', (e) => {
      currentSearch = e.target.value;
      renderEquipment();
    });

    equipmentGrid.addEventListener('click', (e) => {
      const card = e.target.closest('.equipment-card');
      if (card) {
        const equipmentId = card.dataset.id;
        const equipment = allWaterEquipment.find(eq => eq.id === equipmentId);
        
        if (equipment) {
          modalTitle.textContent = equipment.name;
          modalContent.innerHTML = createModalContent(equipment);
          modal.classList.remove('hidden');
          modal.classList.add('flex');
          document.body.style.overflow = 'hidden';
        }
      }
    });

    const closeModalHandler = () => {
      modal.classList.add('hidden');
      modal.classList.remove('flex');
      document.body.style.overflow = '';
    };

    closeModal.addEventListener('click', closeModalHandler);
    
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        closeModalHandler();
      }
    });
  });
</script>

<style>
.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
</style> 